As of Sat. May. 23rd, the failures are as follows:

Rob would like test rmProg4 to roundtrip
  -- Jacques replies: this is a prototypical case where we 
     really need 'constrain'.

Real bugs:
t50, exceptionLebesgue, testRoadMapleProg4, testTrueDetectionL,
testTrueDetectionR, t12, t13, t21, t22, t24, t25, 

Needs investigation:
t56, t57, t58, t9

Unimplemented features:
Vector: t19, t20, t29, all in Vector
First-class functions: all in Function
Change of variables: t1, t3, t4, t5, t16, t17, t18, t23, t27, t28

all others - sub-optimal simplification, or ordering problem
==================

RoundTrip:
t56 - probable bug in convert/Heaviside
t57 - probable bug in convert/Heaviside
t58 - probable bug in convert/Heaviside
t60 - ordering difference
t62 - round-trips, but normalizes differently
t63 - round-trips, but normalizes differently
t64 - t64 and t64' don't simplify to the same t64'', just close!
t65 - different now, need to investigate
t45 - pw/domain interaction with density recognition
t50 - Prob/Real inference issue
t78 - expects a change of variables?
exceptionLebesgue - ???
t52 - ordering issue
mhPriorProp - difference in result (not analyzed yet)
t75 - time expired
t75' - time expired
exceptionCounting - counting mis-simplifies
testRoadMapProg1 - time expired
testRoadMapProg4 - lots of Real/Prob issues
testKernel - failure to recognize a normal under a conditional
testFalseDetection: time expired
testTrueDetectionL: 1 <= FAIL
  -- problem is that the simplifier has a deep design flaw: too deep
     an assumptions that things will be ``polynomial'' once other
     things are frozen.  This is just false.  Will need a redesign.
testTrueDetectionR: infinite loop 

Syntax:
pair1fst/snd - beta instead of list/categorical
testdistLinregSimp - ordering problem
testLinreg - ignored
gamalonDis - time expired

Relationships:
t1 - no simplification because change of variables not implemented
t3 - no simplification because change of variables not implemented
t4 - no simplification because change of variables not implemented
t5 - no simplification because change of variables not implemented
t8 - normalization difference
t9 - gets a funky looking answer now 
t11 - fromProb maps too far in?
t12 - Real/Prob issue
t13 - h2 ** (recip pp1) does not typecheck in Haskell
t14 - just printing issue
t16 - no simplification because change of variables not implemented
t17 - no simplification because change of variables not implemented
t18 - no simplification because change of variables not implemented
t19 - reasoning about Reduce
t20 - reasoning about Reduce
t21 - Prob ** Int does not typecheck
t22 - Real/Prob issue
t23 - no simplification because change of variables not implemented
t24 - pp3 ** pp2 does not typecheck (mkProb bug)
t25 - (pp3+pp4) ** (-1) expects lhs to be Real
t26 - difference in printing
t27 - no simplification because change of variables not implemented
t28 - no simplification because change of variables not implemented
t29 - reasoning about Reduce

Vector: (not all fail anymore!)
testUnrolling - reasoning about Reduce
testUnity - no simplification of counting (to categorical)
testInside - Vector return type not implemented
testPull - reasoning about Reduce
t75 - reasoning about Reduce
testConj - reasoning about Reduce
testPlateDirac - Vector type inference missing

Embed:
P2-id: parse error?

Lazy:
zeroAddInt: counting simplification not done
easierRoadmapProg1: time expired

Function:
t41 - first class functions
pairFun - first class functions
pairFunSimp - first class functions
unknownMeasure - first class functions

