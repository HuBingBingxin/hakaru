== Now Now ==
* make a proposal for data transformations (e.g., what EasierRoadmap should look like), send to the mailing list.
	** make refactoring interactive; e.g., for radians vs degrees stuff in Seismic. Galois wants degrees, the natural model is radians


* top priorities:
	** write papers
	** get arrays to work
		** simplifying non-measures
		** handling HOFs
		** selecting, e.g., the body of a vector, ignoring the outside

* ppaml/printible-lazy//partial.rkt

== Now ==
* Finish DataKinds stuff
* try to clean up repr juggling in easier roadmap
* also try to come up with an API for what program transformations should look like to avoid repr juggling entirely
* hashconsing to keep track of duplicate expressions--- to prevent Lazy.hs from accidentally duplicating things too much
* remove administrative redexes in Expect.hs?
* cf Slam.hs for possible use of the Vector class
* in terms of fragment languages, it'd be good to identify whether any integrals remain to be computed/sampled or not
* try to shrink code before feeding it to Density; also try to make the output of Density smaller more generally
* closure conversion to help with sharing?
* something like attribute grammars in order to simplify when building two things at once (e.g., Expect) but only using one of them
	** how does AG work under binders?
	** if we can move the HPair types into (,) types in Expect, that should help!
		*** cf., how laziness of Haskell cleans up the pairing in Lazy.hs
		*** cf., one-pass cps for removing administrated redexes
		*** or if there's any way to make (HFun (a -> Prob) HProb) make sense...

== Later ==
* parallelizing the test set
	** distributing the test set
* Look at the papers in ppaml (e.g., ./writing/lazy/lazy.tex)
	** multi-inference paper? (for rob)
